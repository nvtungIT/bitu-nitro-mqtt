///
/// NitroMath-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "NitroMath-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridMQTTSpecSwift.hpp"
#include "HybridMathSpecSwift.hpp"
#include "NitroMath-Swift-Cxx-Umbrella.hpp"
#include <NitroModules/HybridContext.hpp>

namespace margelo::nitro::math::bridge::swift {

  // pragma MARK: std::shared_ptr<margelo::nitro::math::HybridMathSpec>
  std::shared_ptr<margelo::nitro::math::HybridMathSpec> create_std__shared_ptr_margelo__nitro__math__HybridMathSpec_(void* _Nonnull swiftUnsafePointer) {
    NitroMath::HybridMathSpecCxx swiftPart = NitroMath::HybridMathSpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::math::HybridMathSpecSwift>(swiftPart);
  }
  void* _Nonnull get_std__shared_ptr_margelo__nitro__math__HybridMathSpec_(std__shared_ptr_margelo__nitro__math__HybridMathSpec_ cppType) {
    std::shared_ptr<margelo::nitro::math::HybridMathSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::math::HybridMathSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridMathSpec\" is not implemented in Swift!");
    }
  #endif
    NitroMath::HybridMathSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroMath::HybridMathSpecCxxUnsafe::toUnsafe(swiftPart);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::math::HybridMQTTSpec>
  std::shared_ptr<margelo::nitro::math::HybridMQTTSpec> create_std__shared_ptr_margelo__nitro__math__HybridMQTTSpec_(void* _Nonnull swiftUnsafePointer) {
    NitroMath::HybridMQTTSpecCxx swiftPart = NitroMath::HybridMQTTSpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::math::HybridMQTTSpecSwift>(swiftPart);
  }
  void* _Nonnull get_std__shared_ptr_margelo__nitro__math__HybridMQTTSpec_(std__shared_ptr_margelo__nitro__math__HybridMQTTSpec_ cppType) {
    std::shared_ptr<margelo::nitro::math::HybridMQTTSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::math::HybridMQTTSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridMQTTSpec\" is not implemented in Swift!");
    }
  #endif
    NitroMath::HybridMQTTSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroMath::HybridMQTTSpecCxxUnsafe::toUnsafe(swiftPart);
  }

} // namespace margelo::nitro::math::bridge::swift
